{"version":3,"sources":["Components/Navbar.js","Components/About.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","blackMode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","react_router_dom","aria-current","to","aboutText","onClick","setBlackMode","setStyle","modeBlack","data-bs-placement","btnText","About","myStyle","backgroundColor","color","borderRadius","style","aria-labelledby","data-bs-parent","TextForm","_useState","useState","_useState2","Object","slicedToArray","Text","setText","fontSize","heading","onChange","event","target","value","rows","role","disabled","length","upperCaseText","toUpperCase","showAlert","LowerCaseText","toLowerCase","newText","split","i","charAt","slice","join","navigator","clipboard","writeText","filter","element","prototype","PropTypes","string","isRequired","defaultProps","Alert","height","alert","str","lower","capitalize","msg","App","_useState3","_useState4","setBtnText","_useState5","_useState6","setAlert","document","body","Components_Alert","react_router","exact","path","message","setTimeout","setStlye","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.9ac841fc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.blackMode === false ? 'dark' : 'light'}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  {props.aboutText}\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            <button type=\"button\" onClick={() => {\r\n              props.setBlackMode(true)\r\n              props.setStyle.modeBlack()\r\n            }} className={`mx-2 py-2 px-3 btn btn-${props.blackMode === false ? 'light' : 'dark'}`} data-bs-toggle=\"tooltip\" data-bs-placement=\"bottom\" title={`${props.btnText}`}></button>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"TextUtils\",\r\n  aboutText: \"About\",\r\n};\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n  const myStyle = {\r\n    backgroundColor: props.blackMode === true ? 'white' : '#111316',\r\n    color: props.blackMode === true ? 'black' : 'white',\r\n    borderRadius: '4px'\r\n  }\r\n  return (\r\n    <div className=\"container\" >\r\n      <h1>About us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n        <div className=\"accordion-item\" style={myStyle} >\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={myStyle} >\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={myStyle}   >\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useState } from \"react\";\r\nimport React from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  const [Text, setText] = useState(\"\");\r\n  const handleUppercase = () => {\r\n    let upperCaseText = Text.toUpperCase();\r\n    setText(upperCaseText);\r\n    props.showAlert(\"Your text has been converted in upper Case\", \"success\")\r\n  };\r\n  const handleLowercase = () => {\r\n    let LowerCaseText = Text.toLowerCase();\r\n    setText(LowerCaseText);\r\n    props.showAlert(\"Your text has been converted in lower Case\", \"success\")\r\n  };\r\n  const handleTitlecase = () => {\r\n    let newText = Text.toLowerCase().split(\" \");\r\n    for (var i = 0; i < newText.length; i++) {\r\n      newText[i] = newText[i].charAt(0).toUpperCase() + newText[i].slice(1);\r\n    }\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Your text has been converted in title Case\", \"success\")\r\n  };\r\n  const handleClear = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Your text has been cleared\", \"success\")\r\n  };\r\n  const handeleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(Text);\r\n    props.showAlert(\"Your text has been copied to clipboard\", \"success\")\r\n  };\r\n  const handleExtraSpaces = () => {\r\n    let newText = Text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces has been removed from your text\", \"success\")\r\n  };\r\n  return (\r\n    <>\r\n      <h1 style={{ fontSize: '36px' }}>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          onChange={handeleOnChange}\r\n          value={Text}\r\n          id=\"Textbox\"\r\n          rows=\"8\"\r\n          style={{\r\n            backgroundColor: props.blackMode === false ? 'black' : 'white',\r\n            color: props.blackMode === false ? 'white' : 'black'\r\n          }}\r\n        ></textarea>\r\n      </div>\r\n      <div\r\n        className=\"btn-group my-1 container \"\r\n        role=\"group\"\r\n        aria-label=\"Basic outlined example\"\r\n      >\r\n        <button\r\n          disabled={Text.length === 0}\r\n          type=\"button\"\r\n          className=\"btn btn-outline-primary\"\r\n          onClick={handleUppercase}\r\n        >\r\n          Concert to Uppercase\r\n        </button>\r\n        <button\r\n          disabled={Text.length === 0}\r\n          type=\"button\"\r\n          className=\"btn btn-outline-primary\"\r\n          onClick={handleLowercase}\r\n        >\r\n          Concert to Lowerrcase\r\n        </button>\r\n        <button\r\n          disabled={Text.length === 0}\r\n          type=\"button\"\r\n          className=\"btn btn-outline-primary\"\r\n          onClick={handleTitlecase}\r\n        >\r\n          Concert to Titlecase\r\n        </button>\r\n        <button\r\n          disabled={Text.length === 0}\r\n          type=\"button\"\r\n          className=\"btn btn-outline-primary\"\r\n          onClick={handleCopy}\r\n        >\r\n          Copy Text\r\n        </button>\r\n        <button\r\n          disabled={Text.length === 0}\r\n          type=\"button\"\r\n          className=\"btn btn-outline-primary\"\r\n          onClick={handleExtraSpaces}\r\n        >\r\n          Remove extra spaces\r\n        </button>\r\n        <button\r\n          disabled={Text.length === 0}\r\n          type=\"button\"\r\n          className=\"btn btn-outline-primary\"\r\n          onClick={handleClear}\r\n        >\r\n          Clear Text\r\n        </button>\r\n      </div>\r\n      <div className=\"container text_summary my-2\">\r\n        <h3>Text summary</h3>\r\n        <p>\r\n          {Text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length}words {Text.length}charecters\r\n        </p>\r\n        <p>{0.008 * Text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length}Minutes to read</p>\r\n        <hr />\r\n        <h3>Preview</h3>\r\n        <p>\r\n          {Text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length > 0\r\n            ? Text\r\n            : \"Nothing to preview here :)\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (str) => {\r\n    const lower = str.toLowerCase()\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n  }\r\n  return (\r\n\r\n    <>\r\n      <div className=\"mb-1\" style={{ height: '50px', }}>\r\n        {props.alert &&\r\n          <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n          </div>}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport React from 'react'\nimport Navbar from \"./Components/Navbar\";\nimport About from './Components/About';\nimport TextForm from \"./Components/TextForm\";\nimport Alert from \"./Components/Alert\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [blackMode, setBlackMode] = useState(true);\n\n\n  const [btnText, setBtnText] = useState(\"Enable Dark Mode\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const setStyle = {\n    modeBlack: () => {\n      if (blackMode === true) {\n        setBlackMode(false)\n        setBtnText(\"Disble Dark Mode\");\n        document.body.style.backgroundColor = \"black\";\n        document.body.style.color = \"white\";\n      }\n      else {\n        setBtnText(\"Enable Dark Mode\");\n        document.body.style.backgroundColor = \"white\";\n        document.body.style.color = \"black\";\n      }\n    }\n  }\n  return (\n    <>\n      <Router>\n\n\n        <Navbar\n          blackMode={blackMode}\n          btnText={btnText}\n          setBlackMode={setBlackMode}\n          setStyle={setStyle}\n        />\n        <Alert alert={alert} />\n        <Routes>\n          <Route exact path=\"/about\" element={<About blackMode={blackMode} />}>\n          </Route>\n          <Route exact path=\"/\" element={<div className=\"container\">\n            <TextForm\n              heading=\"Try TextUtils- Word counter, Charecter counter and Remove extra spaces\"\n              showAlert={showAlert}\n              setStlye={setStyle}\n              blackMode={blackMode}\n              btnText={btnText}\n            />\n          </div>}>\n          </Route>\n        </Routes>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}